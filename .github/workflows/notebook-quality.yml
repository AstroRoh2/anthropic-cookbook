name: Notebook Quality Check

on:
  pull_request:
    paths:
      - 'skills/**/*.ipynb'
      - 'pyproject.toml'
      - 'uv.lock'
  push:
    branches: [main]
    paths:
      - 'skills/**/*.ipynb'

permissions:
  contents: read

jobs:
  validate-notebooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          uv sync --frozen --all-extras
      
      - name: Check notebooks are clean
        run: |
          uv run nbstripout --verify skills/**/*.ipynb || \
            (echo "‚ùå Notebooks contain outputs. Run 'nbstripout skills/**/*.ipynb' locally" && exit 1)
      
      - name: Lint with Ruff via nbQA
        run: |
          # Check for issues
          uv run nbqa ruff skills/ --show-fixes
          
          # Check formatting
          uv run nbqa ruff skills/ --check --select=I,F
      
      - name: Validate notebook structure
        run: |
          uv run python scripts/validate_notebooks.py
      
      - name: Check model usage
        run: |
          uv run python scripts/check_models.py
      
      # Only run API tests on main branch or for maintainers
      - name: Execute notebooks (API Testing)
        if: |
          github.event_name == 'push' || 
          github.event.pull_request.author_association == 'MEMBER' ||
          github.event.pull_request.author_association == 'OWNER'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          mkdir -p test_outputs
          
          for notebook in skills/*/guide.ipynb; do
            echo "üìì Testing: $notebook"
            uv run papermill "$notebook" \
              "test_outputs/$(basename $notebook)" \
              --kernel python3 \
              -p test_mode true \
              -p model "claude-3-5-haiku-latest" \
              -p max_tokens 10 \
              --log-level ERROR \
              || echo "‚ö†Ô∏è  Failed: $notebook"
          done
      
      # Mock testing for external contributors
      - name: Execute notebooks (Mock Testing)
        if: |
          github.event_name == 'pull_request' && 
          github.event.pull_request.author_association != 'MEMBER' &&
          github.event.pull_request.author_association != 'OWNER'
        run: |
          echo "üîí Running in mock mode for external contributor"
          
          for notebook in skills/*/guide.ipynb; do
            echo "üìì Validating structure: $notebook"
            uv run python -m nbformat.validator.validate "$notebook"
          done
      
      - name: Upload test outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: notebook-test-outputs-py${{ matrix.python-version }}
          path: test_outputs/
          retention-days: 7